#!/bin/bash -exu

set -o pipefail

# Globals
PROCESS_NAME=elastic-agent
RUN_DIR="/var/vcap/sys/run/${PROCESS_NAME}"
PIDFILE="${RUN_DIR}/${PROCESS_NAME}.pid"
LOG_DIR="/var/vcap/sys/log/${PROCESS_NAME}"
SCRIPT_NAME="${PROCESS_NAME}_ctl"
JOB_DIR="/var/vcap/jobs/${PROCESS_NAME}"
PKG_DIR="/var/vcap/packages/${PROCESS_NAME}"
DOWNLOADS_DIR="${PKG_DIR}/downloads"
CONFIG_DIR="${JOB_DIR}/config"

function start_logging() {
    exec > >(prepend_datetime >> "${LOG_DIR}/${SCRIPT_NAME}.stdout.log")
    exec 2> >(prepend_datetime >> "${LOG_DIR}/${SCRIPT_NAME}.stderr.log")
}

function prepend_datetime() {
    perl -ne 'BEGIN { use Time::HiRes "time"; use POSIX "strftime"; STDOUT->autoflush(1) }; my $t = time; my $fsec = sprintf ".%09d", ($t-int($t))*1000000000; my $time = strftime("[%Y-%m-%dT%H:%M:%S".$fsec."Z]", localtime $t); print("$time $_")'
}

function pid_exists() {
    ps -p $1 &> /dev/null
}

function create_directories_and_chown_to_vcap() {
    mkdir -p "${LOG_DIR}" "${RUN_DIR}" "${DOWNLOADS_DIR}"
    chown -R vcap:vcap "${LOG_DIR}"
    chown -R vcap:vcap "${RUN_DIR}"
    chown -R vcap:vcap "${DOWNLOADS_DIR}"
}

function copy_agent_config() {
    cp "${CONFIG_DIR}/elastic-agent.yml.bosh_managed" "${CONFIG_DIR}/elastic-agent.yml"
}

function start() {
    if [[ -e "${PIDFILE}" ]]; then
        pid=$(head -1 "${PIDFILE}")
        if pid_exists "${pid}"; then
            return 0
        fi
    fi

    copy_agent_config
    process_path=$(readlink -f "${PKG_DIR}/bin/${PROCESS_NAME}")
    setcap cap_net_bind_service=+ep "${process_path}"
    ulimit -n 65536

    pushd "${JOB_DIR}"
    chpst -u vcap:vcap \
    "${PKG_DIR}/bin/${PROCESS_NAME}" run\
    --path.config "${CONFIG_DIR}" \
    --path.downloads "${DOWNLOADS_DIR}" \
    1>> "${LOG_DIR}/${PROCESS_NAME}.stdout.log" \
    2>> "${LOG_DIR}/${PROCESS_NAME}.stderr.log" &
    popd

    echo $! > "${PIDFILE}"
}

function stop() {
    local pid

    if [[ -e "${PIDFILE}" ]]; then
        pid=$(head -1 "${PIDFILE}")
    else
        exit 0
    fi

    if [[ ! -z "${pid}" ]] && pid_exists "${pid}"; then
        kill -15 "${pid}" || true
    fi

    if [[ -e "/proc/${pid}" ]]; then
        kill -9 "${pid}" || true
    fi

    rm -f "${PIDFILE}"
}

function main() {
    create_directories_and_chown_to_vcap
    start_logging
    case ${1} in
        start)
            start
        ;;
        stop)
            stop
        ;;
        *)
            echo "Usage: ${0} {start|stop}"
        ;;
    esac
}

main $@