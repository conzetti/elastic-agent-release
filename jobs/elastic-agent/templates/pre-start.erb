#!/bin/bash -eux


# Globals
PROCESS_NAME=elastic-agent
PKG_DIR="/var/vcap/packages/${PROCESS_NAME}"
LOG_DIR="/var/vcap/sys/log/${PROCESS_NAME}"
SCRIPT_NAME=pre-start
AGENT_PROGRAM_DIR=/opt/Elastic/Agent
BOSH_CONFIG_DIR="/var/vcap/jobs/${PROCESS_NAME}/config"
[[ -s /var/vcap/instance/deployment ]] && DEPLOYMENT_NAME="bosh-deployment=$(</var/vcap/instance/deployment)"
[[ -s /var/vcap/instance/name ]] && INSTANCE_NAME="bosh-instance=$(</var/vcap/instance/name)"


source "/var/vcap/jobs/${PROCESS_NAME}/bin/functions/common.sh"

function install() {
    local url=<%= p("fleet.url") %>
    local enrollment_token=<%= p("fleet.enrollment_token") %>
    local certificate_authorities=<%= p("fleet.certificate_authorities") %>

    if [[ -f "${AGENT_PROGRAM_DIR}/fleet.enc" ]]; then
        echo "INFO: Elastic Agent already enrolled. Skipping enrollment."
        return 0
    fi

    "${PKG_DIR}/bin/${PROCESS_NAME}" install \
    --url "${url}" \
    --enrollment-token "${enrollment_token}" \
    --certificate-authorities "${certificate_authorities}" \
    --path.logs "${LOG_DIR}" \
<% if_p("tags") do |tags| -%>
    --tag "${DEPLOYMENT_NAME:-'bosh-deployment=undefined'},${INSTANCE_NAME:-'bosh-instance=undefined'},<%= tags.join(',') %>" \
<% end -%>
    --delay-enroll \
    --non-interactive \
    --force
}

function main() {
    start_logging "${LOG_DIR}" "${SCRIPT_NAME}"
    install
    overwrite_agent_config "${BOSH_CONFIG_DIR}" "${AGENT_PROGRAM_DIR}"
}


main