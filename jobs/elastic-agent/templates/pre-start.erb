#!/bin/bash -eux

# Globals
PROCESS_NAME=elastic-agent
PKG_DIR="/var/vcap/packages/${PROCESS_NAME}"
LOG_DIR="/var/vcap/sys/log/${PROCESS_NAME}"
SCRIPT_NAME=pre-start
JOB_DIR="/var/vcap/jobs/${PROCESS_NAME}"
CONFIG_DIR="${JOB_DIR}/config"

function start_logging() {
    exec > >(prepend_datetime >> "${LOG_DIR}/${SCRIPT_NAME}.stdout.log")
    exec 2> >(prepend_datetime >> "${LOG_DIR}/${SCRIPT_NAME}.stderr.log")
}

function prepend_datetime() {
    perl -ne 'BEGIN { use Time::HiRes "time"; use POSIX "strftime"; STDOUT->autoflush(1) }; my $t = time; my $fsec = sprintf ".%09d", ($t-int($t))*1000000000; my $time = strftime("[%Y-%m-%dT%H:%M:%S".$fsec."Z]", localtime $t); print("$time $_")'
}

function enroll() {
    local url=<%= p("fleet.url") %>
    local enrollment_token=<%= p("fleet.enrollment-token") %>
    local certificate_authorities=<%= p("fleet.certificate-authorities") %>

    if [[ -f "${CONFIG_DIR}/fleet.enc" ]]; then
        echo "INFO: Elastic Agent already enrolled. Skipping enrollment."
        return 0
    fi

    pushd "${JOB_DIR}"
    "${PKG_DIR}/bin/${PROCESS_NAME}" enroll \
    --url "${url}" \
    --enrollment-token "${enrollment_token}" \
    --certificate-authorities "${certificate_authorities}" \
    --path.config "${CONFIG_DIR}" \
    --force
}

function main() {
    start_logging
    enroll
}

main